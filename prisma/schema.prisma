// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int           @id @default(autoincrement())
  createdAt DateTime      @default(now())
  email     String        @unique
  name      String
  password  String
  posts     Post[]
  cpf       String        @unique
  dateBirth DateTime
  picture   String?
  address   Address?
  admin     Boolean?      @default(false)
  comments  Comment[]
  courses   UserCourses[]
}

model Address {
  id      Int    @id @default(autoincrement())
  street  String
  number  String
  city    String
  state   String
  country String
  zipCode String
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  Int    @unique
}

model Course {
  id            Int             @id @default(autoincrement())
  name          String
  image         String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @default(now())
  courseContent CourseContent[]
  User          UserCourses[]
}

model UserCourses {
  id       Int     @id @default(autoincrement())
  courseId Int
  userId   Int
  curso    Course @relation(fields: [courseId], references: [id], onDelete: Cascade)
  aluno    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  text      String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post?    @relation(fields: [postId], references: [id])
  postId    Int?
}

model CourseContent {
  id         Int          @id @default(autoincrement())
  title      String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @default(now())
  course     Course       @relation(fields: [courseId], references: [id])
  courseId   Int
  categories Categories[]
  video_url  String
  text       String
}

model Categories {
  id              Int           @id @default(autoincrement())
  name            String
  courseContent   CourseContent @relation(fields: [courseContentId], references: [id])
  courseContentId Int
}

model Post {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  published Boolean   @default(false)
  title     String
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  comments  Comment[]
}
